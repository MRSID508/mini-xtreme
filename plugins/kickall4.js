const { cmd } = require('../command');
const config = require('../config');

cmd({
    pattern: "kickallfast",
    alias: ["kickall", "kickrush"],
    desc: "*‚ö°  Ä·¥á·¥ç·¥è·¥†·¥á ·¥Ä ü ü …¥·¥è…¥-·¥Ä·¥Ö·¥ç…™…¥ ·¥ç·¥á·¥ç ô·¥á Äs ·¥ç·¥è·¥ç·¥á…¥·¥õ·¥Ä…¥·¥á·¥ç·¥á…¥·¥õ*",
    react: "‚ö°",
    category: "group",
    filename: __filename,
}, 
async (conn, mek, m, {
    from, isGroup, senderNumber, groupMetadata, groupAdmins, isBotAdmins, reply
}) => {
    try {
        if (!isGroup) return reply("*üìõ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö·¥á ·¥ò·¥è·¥ú Ä  ü·¥ás …¢ Ä·¥è·¥ú·¥ò·¥ás s·¥á·¥ú ü·¥á·¥ç·¥á…¥·¥õ*");
        const botOwner = conn.user.id.split(":")[0];
        if (senderNumber !== botOwner) return reply("*‚õî s·¥á·¥ú ü  ü·¥á ·¥ò Ä·¥è·¥ò Ä…™√©·¥õ·¥Ä…™ Ä·¥á ·¥Ö·¥ú  ô·¥è·¥õ ·¥ò·¥á·¥ú·¥õ ·¥ú·¥õ…™ ü…™s·¥á Ä √ß·¥Ä*");
        if (!isBotAdmins) return reply("*ü§ñ ·¥ä·¥Ä…™  ô·¥ás·¥è…™…¥ ·¥Ö·¥á ·¥Ö Ä·¥è…™·¥õs ·¥Ö'·¥Ä·¥Ö·¥ç…™…¥*");

        const allParticipants = groupMetadata.participants;
        const botJid = conn.user.id;
        const nonAdmins = allParticipants
            .filter(p => !groupAdmins.includes(p.id) && p.id !== botJid);

        if (nonAdmins.length === 0) return reply("*‚ÑπÔ∏è A·¥ú·¥Ñ·¥ú…¥ ·¥ç·¥á·¥ç ô Ä·¥á √† ·¥áx·¥ò·¥ú üs·¥á Ä*");

        const idsToKick = nonAdmins.map(p => p.id);
        await conn.groupParticipantsUpdate(from, idsToKick, "remove");

        reply(`*‚úÖ ${idsToKick.length} ·¥ç·¥á·¥ç ô Ä·¥ás ·¥áx·¥ò·¥ú üs·¥áÃÅs ·¥Ö·¥ú …¢ Ä·¥è·¥ú·¥ò·¥á ${groupMetadata.subject} ·¥á…¥ 1 s·¥á·¥Ñ·¥è…¥·¥Ö·¥á*`);
    } catch (err) {
        console.error("Erreur dans kickallfast:", err);
        reply("*‚ö†Ô∏è ·¥á Ä Ä·¥á·¥ú Ä  ü·¥è Äs ·¥Ö·¥á  ü'·¥áx·¥ò·¥ú üs…™·¥è…¥ ·¥Ö·¥ás ·¥ç·¥á·¥ç ô Ä·¥ás*");
    }
});
